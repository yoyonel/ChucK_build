
include version.mk

CHUCK_SRC_DIR=chuck/src
THIS_DIR=$(PWD)
LANGUAGE=English

WXW_DIR=wxw
BIN_DIR=wxw

CC=gcc
LEX=flex
YACC=bison
INCLUDES=-I$(CHUCK_SRC_DIR) -I$(WXW_DIR) -I$(PWD)
FLAGS=-D__WINDOWS_DS__ -D__WINDOWS_PTHREAD__ -D__MA_WXWIDGETS__ \
      `wx-config --debug=no --cppflags` -O3 -c
LIBS=`wx-config --debug=no --libs adv,stc,core,base` \
	-ldsound -ldinput -ldxguid -lwinmm -lstdc++ -lm -lole32
SF_OBJ=util_sndfile.o

ifneq ($(CHUCK_DEBUG),)
FLAGS+= -g -O0
endif

ifneq ($(CHUCK_STRICT),)
FLAGS+= -Wall
endif

#-----------------------------------------------------------------------------
# by default, ChucK uses a pre-configured libsndfile...
# uncomment the next 3 lines to use libsndfile on your system
#-----------------------------------------------------------------------------
#FLAGS+= -D__CK_SNDFILE_NATIVE__
#LIBS+= -lsndfile
#SF_OBJ=

CHUCK_OBJS=$(CHUCK_SRC_DIR)/chuck.tab.o $(CHUCK_SRC_DIR)/chuck.yy.o \
	$(CHUCK_SRC_DIR)/chuck_absyn.o $(CHUCK_SRC_DIR)/chuck_parse.o \
	$(CHUCK_SRC_DIR)/chuck_errmsg.o $(CHUCK_SRC_DIR)/chuck_frame.o \
	$(CHUCK_SRC_DIR)/chuck_symbol.o $(CHUCK_SRC_DIR)/chuck_table.o \
	$(CHUCK_SRC_DIR)/chuck_utils.o $(CHUCK_SRC_DIR)/chuck_vm.o \
	$(CHUCK_SRC_DIR)/chuck_instr.o $(CHUCK_SRC_DIR)/chuck_scan.o \
	$(CHUCK_SRC_DIR)/chuck_type.o $(CHUCK_SRC_DIR)/chuck_emit.o \
	$(CHUCK_SRC_DIR)/chuck_compile.o $(CHUCK_SRC_DIR)/chuck_dl.o \
	$(CHUCK_SRC_DIR)/chuck_oo.o $(CHUCK_SRC_DIR)/chuck_lang.o \
	$(CHUCK_SRC_DIR)/chuck_ugen.o $(CHUCK_SRC_DIR)/chuck_globals.o \
	$(CHUCK_SRC_DIR)/chuck_otf.o $(CHUCK_SRC_DIR)/chuck_stats.o \
	$(CHUCK_SRC_DIR)/chuck_bbq.o $(CHUCK_SRC_DIR)/chuck_shell.o \
	$(CHUCK_SRC_DIR)/chuck_io.o \
	$(CHUCK_SRC_DIR)/chuck_console.o $(CHUCK_SRC_DIR)/digiio_rtaudio.o \
    $(CHUCK_SRC_DIR)/hidio_sdl.o \
	$(CHUCK_SRC_DIR)/midiio_rtmidi.o $(CHUCK_SRC_DIR)/RtAudio/RtAaudio.o \
	$(CHUCK_SRC_DIR)/rtmidi.o $(CHUCK_SRC_DIR)/ugen_osc.o \
	$(CHUCK_SRC_DIR)/ugen_filter.o $(CHUCK_SRC_DIR)/ugen_stk.o \
	$(CHUCK_SRC_DIR)/ugen_xxx.o $(CHUCK_SRC_DIR)/ulib_machine.o \
	$(CHUCK_SRC_DIR)/ulib_math.o $(CHUCK_SRC_DIR)/ulib_std.o \
	$(CHUCK_SRC_DIR)/ulib_opsc.o $(CHUCK_SRC_DIR)/util_buffers.o \
	$(CHUCK_SRC_DIR)/util_console.o $(CHUCK_SRC_DIR)/util_math.o \
	$(CHUCK_SRC_DIR)/util_network.o $(CHUCK_SRC_DIR)/util_raw.o \
	$(CHUCK_SRC_DIR)/util_string.o $(CHUCK_SRC_DIR)/util_thread.o \
	$(CHUCK_SRC_DIR)/util_xforms.o $(CHUCK_SRC_DIR)/util_opsc.o \
	$(CHUCK_SRC_DIR)/uana_xform.o $(CHUCK_SRC_DIR)/uana_extract.o \
	$(CHUCK_SRC_DIR)/util_hid.o $(CHUCK_SRC_DIR)/util_serial.o \
	$(CHUCK_SRC_DIR)/$(SF_OBJ)

OBJS=miniAudicle.o $(WXW_DIR)/mAParentFrame.o $(WXW_DIR)/mADocument.o \
     $(WXW_DIR)/mAView.o $(WXW_DIR)/miniAudicle_rc.o $(WXW_DIR)/mAVMMonitor.o \
	 $(WXW_DIR)/mAMenuBar.o $(WXW_DIR)/mAConsoleMonitor.o \
     $(WXW_DIR)/mAConfig.o$(WXW_DIR)/mAPreferencesWindow.o \
     $(WXW_DIR)/mAUIElements.o miniAudicle_import.o miniAudicle_ui_elements.o

RESOURCES=$(WXW_DIR)/icons/miniAudicle.rc $(WXW_DIR)/icons/miniAudicle.ico 

miniAudicle: $(OBJS) $(CHUCK_OBJS)
	g++ -o $(BIN_DIR)/miniAudicle.exe $(OBJS) $(CHUCK_OBJS) $(LIBS)

$(WXW_DIR)/miniAudicle_rc.o: $(RESOURCES)
	windres -i $(WXW_DIR)/icons/miniAudicle.rc -o $(WXW_DIR)/miniAudicle_rc.o

# build the core chuck code
$(CHUCK_OBJS):
	make -C $(CHUCK_SRC_DIR) win32

miniAudicle_shell.o: miniAudicle_shell.cpp miniAudicle_shell.h
	$(CC) $(FLAGS) $(INCLUDES) miniAudicle_shell.cpp

miniAudicle.o: miniAudicle.cpp miniAudicle.h
	$(CC) $(FLAGS) $(INCLUDES) miniAudicle.cpp

$(WXW_DIR)/mAParentFrame.o: $(WXW_DIR)/mAParentFrame.cpp $(WXW_DIR)/mAParentFrame.h $(WXW_DIR)/mAView.h $(WXW_DIR)/mADocument.h $(WXW_DIR)/mAVMMonitor.h miniAudicle.h $(WXW_DIR)/mAMenuBar.h
	$(CC) -o $(WXW_DIR)/mAParentFrame.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAParentFrame.cpp

$(WXW_DIR)/mADocument.o: $(WXW_DIR)/mADocument.cpp $(WXW_DIR)/mADocument.h $(WXW_DIR)/mAView.h
	$(CC) -o $(WXW_DIR)/mADocument.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mADocument.cpp

$(WXW_DIR)/mAView.o: $(WXW_DIR)/mAView.cpp $(WXW_DIR)/mAView.h
	$(CC) -o $(WXW_DIR)/mAView.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAView.cpp

$(WXW_DIR)/mAVMMonitor.o: $(WXW_DIR)/mAVMMonitor.cpp $(WXW_DIR)/mAVMMonitor.h $(WXW_DIR)/mAParentFrame.h miniAudicle.h
	$(CC) -o $(WXW_DIR)/mAVMMonitor.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAVMMonitor.cpp

$(WXW_DIR)/mAConsoleMonitor.o: $(WXW_DIR)/mAConsoleMonitor.cpp $(WXW_DIR)/mAConsoleMonitor.h
	$(CC) -o $(WXW_DIR)/mAConsoleMonitor.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAConsoleMonitor.cpp

$(WXW_DIR)/mAMenuBar.o: $(WXW_DIR)/mAMenuBar.cpp $(WXW_DIR)/mAMenuBar.h $(WXW_DIR)/mAEvents.h
	$(CC) -o $(WXW_DIR)/mAMenuBar.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAMenuBar.cpp

$(WXW_DIR)/mAConfig.o: $(WXW_DIR)/mAConfig.cpp $(WXW_DIR)/mAConfig.h
	$(CC) -o $(WXW_DIR)/mAConfig.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAConfig.cpp

$(WXW_DIR)/mAPreferencesWindow.o: $(WXW_DIR)/mAPreferencesWindow.cpp $(WXW_DIR)/mAPreferencesWindow.h
	$(CC) -o $(WXW_DIR)/mAPreferencesWindow.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAPreferencesWindow.cpp

$(WXW_DIR)/mAUIElements.o: $(WXW_DIR)/mAUIElements.cpp miniAudicle_ui_elements.h
	$(CC) -o $(WXW_DIR)/mAUIElements.o $(FLAGS) $(INCLUDES) $(WXW_DIR)/mAUIElements.cpp

miniAudicle_import.o: miniAudicle_import.cpp miniAudicle_import.h miniAudicle_ui_elements.h
	$(CC) -o miniAudicle_import.o $(FLAGS) $(INCLUDES) miniAudicle_import.cpp

miniAudicle_ui_elements.o: miniAudicle_ui_elements.cpp miniAudicle_ui_elements.h
	$(CC) -o miniAudicle_ui_elements.o $(FLAGS) $(INCLUDES) miniAudicle_ui_elements.cpp

clean: 
	rm -rf *.o $(WXW_DIR)/*.o $(BIN_DIR)/miniAudicle.exe

# VERSION?=0.2.3-beta-15
DIST_DIR=miniAudicle-$(VERSION)

MSVC_RELEASE_DIR=Release
QT_RELEASE_DIR=../build-miniAudicle-Static-Release/release/

NOTES_DIR=../notes
NOTES=README.txt COPYING LGPL BUGS VERSIONS
NOTES:=$(addprefix $(NOTES_DIR)/,$(NOTES))

CHUCK_MANUAL_DIR=$(CHUCK_SRC_DIR)/../doc/manual
CHUCK_MANUAL=$(CHUCK_MANUAL_DIR)/ChucK_manual.pdf
CHUCK_MANUAL_URL=http://chuck.stanford.edu/release/files/chuck_manual.pdf

.PHONY: dist
dist:
	rm -rf $(DIST_DIR) miniAudicle-$(VERSION).zip
	mkdir $(DIST_DIR)
	cp $(QT_RELEASE_DIR)/miniAudicle.exe $(NOTES) $(DIST_DIR)
	cp -r $(CHUCK_SRC_DIR)/examples $(DIST_DIR)
	mkdir $(DIST_DIR)/documentation
#	-make -C $(CHUCK_MANUAL_DIR) > /dev/null
#	cp $(CHUCK_MANUAL) $(DIST_DIR)/documentation
	curl $(CHUCK_MANUAL_URL) > $(DIST_DIR)/documentation/ChucK_manual.pdf
	rm -rf `find $(DIST_DIR)/ -name CVS` `find $(DIST_DIR)/ -name .svn`
	zip -q -9 -r -m miniAudicle-$(VERSION).zip $(DIST_DIR)
